apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deployment
  labels:
    app: httpd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
    spec:
      containers:
      - name: httpd
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpd-service
  labels:
    name: httpd-service
    topology: any
    component: network-check
    traffic: internal
    quarantine: "false"
    type: autocheck
spec:
  selector:
    name: httpd-deployment
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 80
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: httpd-service-cnp
  labels:
    name: httpd-service-cnp
    topology: any
    component: policy-check
    traffic: internal
    quarantine: "false"
    type: autocheck
spec:
  endpointSelector:
    matchLabels:
      name: httpd-service-cnp
  egress:
  - toPorts:
    - ports:
      - port: "8080"
        protocol: TCP
    toEndpoints:
    - matchLabels:
        name: httpd-service
  - toPorts:
    - ports:
      - port: "53"
        protocol: ANY
    toEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: kube-system
        k8s:k8s-app: kube-dns
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: httpd-ingress
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: test.enigma.samoth.eu
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: httpd-service
#             port:
#               number: 8080
